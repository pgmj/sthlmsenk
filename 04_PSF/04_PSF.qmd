---
title: "Psykiska/psykosomatiska besvär"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://ri.se/shic
  orcid: 0000-0003-1669-592X
date: 2023-05-09
format: 
  html:
    toc: true
    toc-depth: 3
    toc-title: "Innehållsförteckning"
    page-layout: full
    mainfont: 'Lato'
    monofont: 'Roboto Mono'
    code-overflow: wrap
    code-tools: true
    code-fold: true
    number-sections: true
    #fig-dpi: 250
    layout-align: left
    linestretch: 1.6
    theme: materia
  pdf:
    papersize: a4
    documentclass: report
execute:
  echo: true
  warning: false
  message: false
  cache: true
editor_options: 
  markdown: 
    wrap: 72
  chunk_output_type: console
bibliography: grateful-refs.bib
---


```{r}
#| label: recoderawdata
#| include: false

# # koda om svaren för items som ingår i psykiska/psykosomatiska besvär, F88-F99 i data, fråga 90-101 i PDF
# # variabler df[289:300] i datafil.
# # låg poäng = låg risk
# df$F88<-recode(df$F88,"'Aldrig'=1;'Ungefär 1 gång/termin'=2;'Ungefär 1 gång/månad'=3;'Ungefär 1 gång/vecka'=4;'Flera gånger i veckan'=5",as.factor=FALSE)
# df$F89<-recode(df$F89,"'Väldigt ofta'=5;'Ganska ofta'=4;'Ibland'=3;'Någon enstaka gång'=2;'Sällan'=1",as.factor=FALSE)
# df$F90<-recode(df$F90,"'Sällan'=1;'Någon enstaka gång'=2;'Ibland'=3;'Ganska ofta'=4;'Väldigt ofta'=5",as.factor=FALSE)
# df$F91<-recode(df$F91,"'Aldrig'=1;'Ungefär 1 gång/termin'=2;'Ungefär 1 gång/månad'=3;'Ungefär 1 gång/vecka'=4;'Flera gånger i veckan'=5",as.factor=FALSE)
# df$F92<-recode(df$F92,"'Inte alls'=1;'Ganska lite'=2;'En del'=3;'Ganska mycket'=4;'Väldigt mycket'=5",as.factor=FALSE)
# df$F93<-recode(df$F93,"'Aldrig'=1;'Ungefär 1 gång/termin'=2;'Ungefär 1 gång/månad'=3;'Ungefär 1 gång/vecka'=4;'Flera gånger i veckan'=5",as.factor=FALSE)
# df$F94<-recode(df$F94,"'Väldigt ofta'=5;'Ganska ofta'=4;'Ibland'=3;'Någon enstaka gång'=2;'Nästan aldrig'=1",as.factor=FALSE)
# df$F95<-recode(df$F95,"'Aldrig'=1;'Ungefär 1 kväll/termin'=2;'Ungefär 1 kväll/månad'=3;'Ungefär 1 kväll/vecka'=4;'Flera gånger i veckan'=5",as.factor=FALSE)
# df$F96<-recode(df$F96,"'Nästan aldrig'=5;'Någon enstaka gång'=4;'Ibland'=3;'Ganska ofta'=2;'Oftast'=1",as.factor=FALSE)
# df$F97<-recode(df$F97,"'Sällan'=1;'Någon enstaka gång'=2;'Ibland'=3;'Ganska ofta'=4;'Väldigt ofta'=5",as.factor=FALSE)
# df$F98<-recode(df$F98,"'Aldrig'=1;'Ungefär 1 natt/termin'=2;'Ungefär 1 natt/månad'=3;'Ungefär 1 natt/vecka'=4;'Flera nätter i veckan'=5",as.factor=FALSE)
# df$F99<-recode(df$F99,"'Sällan'=5;'Någon enstaka gång'=4;'Ibland'=3;'Ganska ofta'=2;'Väldigt ofta'=1",as.factor=FALSE)
# 
# # flytta ankare från 1 till 0 för lägsta kategori, behövs för vissa Rasch-program
# for (i in 289:300) {
#   df[,i]<-recode(df[,i],"1=0;2=1;3=2;4=3;5=4",as.factor=FALSE)
# }

```

```{r}
#| label: setup
#| code-fold: false
#| include: false

# two packages below require that you use devtools to install them manually:
# first install devtools by
# install.packages('devtools')

library(arrow)
library(ggrepel)
library(car)
library(grateful) # devtools::install_github("Pakillo/grateful")
library(kableExtra)
library(readxl)
library(tidyverse)
library(eRm)
library(mirt)
library(psych)
library(ggplot2)
library(psychotree)
library(matrixStats)
library(reshape)
library(knitr)
library(cowplot)
library(formattable) 
library(RISEkbmRasch) # devtools::install_github("pgmj/RISEkbmRasch")
library(glue)
library(foreach)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

### set up color palette based on RISE guidelines
RISEprimGreen <- "#009ca6"
RISEprimRed <- "#e83c63"
RISEprimYellow <- "#ffe500"
RISEprimGreenMid <- "#8dc8c7"
RISEprimRedMid <- "#f5a9ab"
RISEprimYellowMid <- "#ffee8d"
RISEprimGreenLight <- "#ebf5f0"
RISEprimRedLight <- "#fde8df"
RISEprimYellowLight <- "#fff7dd"
RISEcompPurple <- "#482d55"
RISEcompGreenDark <- "#0e4e65"
RISEgrey1 <- "#f0f0f0"
RISEgrey2 <- "#c8c8c8"
RISEgrey3 <- "#828282"
RISEgrey4 <- "#555555"

# set some colors used later
cutoff_line <- RISEprimRed
dot_color <- "black"
backg_color <- RISEprimGreenLight

# set fontsize for all tables
r.fontsize <- 15

### first we pre-set our chosen cut-off values for some commonly used indices:
msq_min <- 0.7
msq_max <- 1.3
zstd_min <- -2
zstd_max <- 2
loc_dep <- 0.2 # above average residual correlation
dif_dif <- 0.5 # logits difference between groups in average item location (DIF)

### zstd is inflated with large samples (N > 500). Reduce sample size to jz and 
### run analysis yz random samples to get average ZSTD
jz = 300 # number to include in dataset
yz = 10 # number of random samples

# import item information
itemlabels<-read_excel("../../data/PSFitems.xls")

# read recoded dataset
# df <- read.csv("C:/Users/magnuspjo/OneDrive - RISE/Dokument/Länsstyrelsen/Stockholmsenkäten2022/data/PSFalldata.csv", fileEncoding = "ISO-8859-1")

df.all <- read_parquet("../../data/2022-08-22 sthlmsenkat data.parquet")

df <- df.all %>%
  select(itemlabels$itemnr, Kön, ARSKURS, ar)

# create dataframe with 2014 data with all variables (post recode)
df.2014 <- subset(df, ar == "2014")
df.all.years <- df
df.omit.na <- na.omit(df.2014)
df.omit.na$ar <- NULL

# create DIF variables
dif.gender <- df.omit.na$Kön
df.omit.na$Kön <- NULL
dif.arskurs <- df.omit.na$ARSKURS
df.omit.na$ARSKURS <- NULL

# prepare for dif between years
df.dif.years <- df.all.years %>%
  select(starts_with("F"), ar) %>% 
  na.omit()
dif.year <- df.dif.years$ar
df.dif.years$ar <- NULL
# df.dif.years can later be used for DIF analysis of years

```

## Bakgrund

Item/frågor har etiketter F88-F99 i datafilen, och motsvaras av fråga 90-101 i PDF-filen med frågor.

Samtliga frågor har fem svarskategorier, vilka varierar mellan frågorna. Fem frågor har svarskategorier från "Aldrig" till "Flera gånger i veckan". Sex frågor har från "Sällan" till "Väldigt ofta", och en från "Inte alls" till "Väldigt mycket".

Svarsdata har kodats så att högre poäng innebär mera besvär/högre risk.

Sektionen i enkäten inleds med meningen: "NÅGRA FRÅGOR OM HUR DU MÅR".

## Lista med enkätfrågorna

```{r}
#| label: showitems
#| tbl-cap-location: top

RIlistitems(df.omit.na)
```

### Demografi

Vi har `r nrow(df.omit.na)` deltagare i samplet från 2014, och deras könsfördelning återges i tabellen nedan. Deltagare som saknar data på samtliga frågor är borttagna ur analysen.

## Deskriptiva data

### Demografi

```{r}
#| label: descriptives1
#| layout-ncol: 2
RIdemographics(dif.gender, "Kön")
RIdemographics(dif.arskurs, "Årskurs")
```


### Item-data

:::: column-page-inset-left
::: panel-tabset
#### Tile plot
```{r}
#| label: descriptives2
RItileplot(df.omit.na)
```
#### Stacked bars
```{r}
#| label: stack1
RIbarstack(df.omit.na)
```
#### Barplots {.scrollable}
```{r}
#| label: alt-descriptives
#| layout-ncol: 2
RIbarplot(df.omit.na)
```
:::
::::

## Rasch-analys 1 samtliga items

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.omit.na, fontsize = 12)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.omit.na, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.omit.na)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.omit.na)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.omit.na, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 7
RItargeting(df.omit.na)
```
### Itemhierarki
```{r}
#| fig-height: 7
RIitemHierarchy(df.omit.na)
```
### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.omit.na, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::

PCA på residualer från Rasch-modellen indikerar möjlig multidimensionalitet. Utifrån faktorladdningarna på första residualkontrasten ser vi två potentiella kluster i data. Det ena betecknas av de psykosomatiska frågorna, det andra av psykiska besvär. Vi tittar på klustren separat.

## Rasch-analys 1 - psykosomatiska besvär
```{r}
#| column: margin

items.psm <- c("F88","F91","F93","F95","F98")

df.psm <- df.omit.na %>% 
  select(any_of(items.psm))

RIlistItemsMargin(df.psm, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.psm, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psm)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.psm, cutoff = 0.2)
```
### Targeting
```{r}
RItargeting(df.psm)
```
### Itemhierarki
```{r}
RIitemHierarchy(df.psm)
```
### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.psm, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
#| label: rasch2.rcat2
plot(mirt.rasch, type="trace")
```
### Barplots {.scrollable}
```{r}
#| layout-ncol: 2
for (i in 1:ncol(df.psm)) {
    barplot(table(df.psm[, i]), col = "#8dc8c7", main = names(df.psm[i]), 
      ylab = "Number of responses", xlab = (itemlabels %>% 
                                              filter(itemnr %in% names(df.psm)) 
                                            %>% .[i,2]))
  }
```
:::
::::

Bortsett från svarskategorierna fungerar items acceptabelt. 

### Omkodning av svarskategorier

Vi behöver åtgärda flera items genom att slå samman svarskategorier:

- F91: 1+2 och 3+4
- F93 och F98: 3+4
- F95: 0+1

```{r}
#| layout-ncol: 2

df.psm$F91 <- recode(df.psm$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.psm$F93 <- recode(df.psm$F93, "4=3", as.factor = FALSE)
df.psm$F98 <- recode(df.psm$F98, "4=3", as.factor = FALSE)
df.psm$F95 <- recode(df.psm$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)
```
```{r}
#| include: false
mirt.rasch <- mirt(df.psm, model=1, itemtype='Rasch') # unidimensional Rasch model
```

::: panel-tabset
#### Svarskategorier
```{r}
plot(mirt.rasch, type="trace")
```
#### Itemhierarki (med konfidensintervall runt svarströsklar)
```{r}
RIitemHierarchy(df.psm)
```
:::

## Rasch-analys 2 - psykosomatiska besvär

Efter att ha åtgärdat svarskategorierna.
```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psm, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.psm, 300, 32, 8)
```
### PCA
```{r}
#| label: rasch3.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psm)
```
### Loadings 1st contrast
```{r}
#| label: rasch3.load
RIloadLoc(df.psm)
```
### Residualkorrelationer
```{r}
#| label: rasch3.rcorr
RIresidcorr(df.psm, cutoff = 0.2)
```
### Targeting
```{r}
#| label: rasch3.targ
RItargeting(df.psm)
```
### Itemhierarki
```{r}
RIitemHierarchy(df.psm)
```
:::
::::

## Invarians-/DIF

### Kön
```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psm, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
RIdifTable(df.psm, dif.gender)
```
#### Figur
```{r}
RIdifFigure(df.psm, dif.gender)
```
:::
::::

Inga problem med DIF för något item gällande kön.

### Årskurs
```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psm, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
#| label: dif1
RIdifTable(df.psm, dif.arskurs)
```
#### Figur
```{r}
#| label: dif1.2
RIdifFigure(df.psm, dif.arskurs)
```
:::
::::

### Årtal
```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psm, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
#| label: difyear1

final.psm.items <- names(df.psm)
# write.csv(final.psm.items, file = "2022-09-18_PSMfinalitems.csv")
df.dif.years.psm <- df.dif.years %>%
  select(any_of(final.psm.items))

df.dif.years.psm$F91 <- recode(df.dif.years.psm$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.dif.years.psm$F93 <- recode(df.dif.years.psm$F93, "4=3", as.factor = FALSE)
df.dif.years.psm$F98 <- recode(df.dif.years.psm$F98, "4=3", as.factor = FALSE)
df.dif.years.psm$F95 <- recode(df.dif.years.psm$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)

RIdifTable(df.dif.years.psm, dif.year)
```
#### Figur 1
```{r}
#| label: difyear1.2

RIdifFigure(df.dif.years.psm, dif.year)
```
#### Figur 2
```{r}
RIdifFigTime(df.dif.years.psm, dif.year)
```
:::
::::

Items är stabila och jämförbara över tid.

## Reliabilitet - psykosomatiska besvär

```{r}
RItif(df.psm)
```

Vi har acceptabel reliabilitet för ca 68% av respondenterna.

## Item-parametrar
```{r}
RIitemparams(df.dif.years.psm, "PsyksomItemParams.csv")
```


## Transformeringstabell

Med mätosäkerheter angivna som *Logit std.error*, där värden under 0.54 motsvarar reliabilitet över PSI = 0.7.

```{r}
RIscoreSE(df.dif.years.psm)
```


## Rasch-analys 1 - psykiska besvär
```{r}
items.psm <- c("F88","F91","F93","F95","F98")

df.psy <- df.omit.na %>% 
  select(!any_of(items.psm))
```

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psy, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
#| label: raschpsy1.fit

RIitemfitPCM2(df.psy, 300, 32, 8)
```
### PCA
```{r}
#| label: raschpsy1.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psy)
```
### Residualkorrelationer
```{r}
#| label: raschpsy1.rcorr
RIresidcorr(df.psy, cutoff = 0.2)
```
### Targeting
```{r}
#| label: raschpsy1.targ
RItargeting(df.psy)
```
### Itemhierarki
```{r}
#| label: raschpsy1.targs
RIitemHierarchy(df.psy)
```
### Svarskategorier
```{r}
#| label: raschpsy1.rcat1
#| include: false
mirt.rasch <- mirt(df.psy, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
#| label: raschpsy1.rcat2
plot(mirt.rasch, type="trace")
```
### Barplots {.scrollable}
```{r}
#| label: raschpsy1.raw
#| layout-ncol: 2
for (i in 1:ncol(df.psy)) {
    barplot(table(df.psy[, i]), col = "#8dc8c7", main = names(df.psy[i]), 
      ylab = "Number of responses", xlab = (itemlabels %>% 
                                              filter(itemnr %in% names(df.psy)) 
                                            %>% .[i,2]))
  }
```
### Items
```{r}
#| label: raschpsy1.items
RIlistitems(df.psy)
```
:::
::::

Många items har problem med oordnade svarskategorier.

Items 92 och 96 har en för stor residualkorrelation, men vi avvaktar med åtgärd tills svarskategorierna är åtgärdade.

## Omkodning av svarskategorier

Vi behöver åtgärda flera items:

- **F89, 90, 96**: 1+2 och 3+4
- **F92, 99**: 3+4
- **F97**: 0+1

(flera varianter testades, och ovanstående fungerade minst dåligt)

```{r}
#| layout-ncol: 2

df.psy$F89 <- recode(df.psy$F89, "2=1;3=2;4=2", as.factor = FALSE)
df.psy$F90 <- recode(df.psy$F90, "2=1;3=2;4=2", as.factor = FALSE)
df.psy$F96 <- recode(df.psy$F96, "2=1;3=2;4=2", as.factor = FALSE)
df.psy$F97 <- recode(df.psy$F97, "1=0;2=1;3=2;4=3", as.factor = FALSE)

df.psy$F92 <- recode(df.psy$F92, "4=3", as.factor = FALSE)
df.psy$F99 <- recode(df.psy$F99, "4=3", as.factor = FALSE)

```

::: panel-tabset
#### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.psy, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
#### Itemhierarki (med konfidensintervall runt svarströsklar)
```{r}
RIitemHierarchy(df.psy)
```
:::

## Rasch-analys 2 - psykiska besvär

Efter att ha åtgärdat svarskategorierna.

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psy, fontsize = 13)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
#| label: raschpsy2.fit
RIitemfitPCM2(df.psy, 300, 32, 8)
```
### PCA
```{r}
#| label: raschpsy2.pca
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psy)
```
### Residualkorrelationer
```{r}
#| label: raschpsy2.rcorr
RIresidcorr(df.psy, cutoff = 0.2)
```
### Targeting
```{r}
#| label: raschpsy2.targ
RItargeting(df.psy)
```
### Itemhierarki
```{r}
RIitemHierarchy(df.psy)
```
:::
::::

Vi har två residualkorrelationer ca 0.26 över medelvärdet för samtliga residualkorrelationer.

- F96 tas bort (F92 behålls pga bättre targeting)
- F90 tas bort (F89 behålls pga bättre targeting)

### Reliabilitet

Även om vi inte undersökt DIF, vilket bör göras innan reliabiliteten bedöms, så har de påtagliga problemen med svarskategorierna medfört att vi kan ha såpass låg reliabilitet att det inte är meningsfullt med DIF-analysen.

```{r}
#| label: raschpsy2.rel2

df.psy$F96 <- NULL
df.psy$F90 <- NULL

RItif(df.psy)
```

Eftersom många items uppvisade problem med svarskategorierna blir reliabiliteten låg, men ändå över gränsvärdet nära mitten på skalan.


```{r}
RIitemparams(df.psy, "PsykBesvItemParams.csv")
```


## Explorativ analys

Vi provar att slå samman items från psykiska besvär med de items som utgör psykosomatiska besvär.

## Rasch-analys 1 psykiska/psykosomatiska besvär

```{r}
items.psm <- c("F88","F91","F93","F95","F98")

df.psm <- df.omit.na %>% 
  select(any_of(items.psm))

df.psm$F91 <- recode(df.psm$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.psm$F93 <- recode(df.psm$F93, "4=3", as.factor = FALSE)
df.psm$F98 <- recode(df.psm$F98, "4=3", as.factor = FALSE)
df.psm$F95 <- recode(df.psm$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)

df.psy <- df.omit.na %>% 
  select(!any_of(items.psm))

df.psy$F89 <- recode(df.psy$F89, "2=1;3=2;4=2", as.factor = FALSE)
df.psy$F90 <- recode(df.psy$F90, "2=1;3=2;4=2", as.factor = FALSE)
df.psy$F96 <- recode(df.psy$F96, "2=1;3=2;4=2", as.factor = FALSE)
df.psy$F97 <- recode(df.psy$F97, "1=0;2=1;3=2;4=3", as.factor = FALSE)
df.psy$F92 <- recode(df.psy$F92, "4=3", as.factor = FALSE)
df.psy$F99 <- recode(df.psy$F99, "4=3", as.factor = FALSE)


df.psf <- cbind(df.psm,df.psy)

df.psf <- df.psf |> 
  relocate(F92, .after = "F91") |> 
  relocate(F97, .before = "F98") |> 
  relocate(F89, .after = "F88") |>
  relocate(F94, .before = "F95")

RItileplot(df.psf)
# psf.items <- names(df.psf)
# 
# df.psf <- df.omit.na |> 
#   select(any_of(psf.items))
```


```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psf, fontsize = 12)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
#| cache: true
RIitemfitPCM2(df.psf, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psf)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.psf)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.psf, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 7
RItargeting(df.psf)
```
### Itemhierarki
```{r}
#| fig-height: 7
RIitemHierarchy(df.psf)
```
### Svarskategorier
```{r}
#| include: false
mirt.rasch <- mirt(df.psf, model=1, itemtype='Rasch') # unidimensional Rasch model
```
```{r}
plot(mirt.rasch, type="trace")
```
:::
::::

Starkaste korrelationen är mellan F92 (Hur mycket skulle du vilja ändra på dig själv?) och F96 (Är du nöjd med ditt utseende?). Båda korrelerar dessutom med F94 (Hur ofta tycker du att du inget duger till?). Vi tar bort F96 som ter sig innehållsmässigt minst relevant.

```{r}
df.psf$F96 <- NULL
```

Item F94 har problem med oordnade svarskategorier.

::: panel-tabset
#### ICC plot
```{r}
#| layout-ncol: 2
df.erm <- PCM(df.psf)
plotICC(df.erm, item.subset = "F94")
df.psf %>% 
  select(F94) %>% 
  RIbarplot()
```
#### Konfidensintervall för svarströsklar
```{r}
RIitemHierarchy(df.psf)
```
:::

Vi slår samman 1 och 2, samt 3 och 4.

::: panel-tabset
#### ICC plot
```{r}
df.psf$F94 <- recode(df.psf$F94, "4=2;3=2;2=1", as.factor = FALSE)
df.erm <- PCM(df.psf)
plotICC(df.erm, item.subset = "F94")
```
#### Konfidensintervall för svarströsklar
```{r}
RIitemHierarchy(df.psf)
```
:::


## Rasch-analys 2 psykiska/psykosomatiska besvär

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psf, fontsize = 12)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.psf, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psf)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.psf)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.psf, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 7
RItargeting(df.psf)
```
### Itemhierarki
```{r}
#| fig-height: 7
RIitemHierarchy(df.psf)
```
:::
::::

F89 och 94 är något låga på item fit ZSTD, men MSQ ser bra ut.

Vi har flera par av items som korrelerar över gränsvärdet 0.2, men ingen över 0.25:

- F94 med både 89 och 92 (duger inget till, ledsen/deppig, vill ändra dig själv)
- F89 med både 94 och 90 (ledsen/deppig, duger inget till, rädd)

Vi tar bort 94 och 90.

```{r}
df.psf$F90 <- NULL
df.psf$F94 <- NULL
```


## Rasch-analys 3 psykiska/psykosomatiska besvär

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psf, fontsize = 12)
```

:::: column-page-inset-left
::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df.psf, 300, 32, 8)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df.psf)
```
### Loadings 1st contrast
```{r}
RIloadLoc(df.psf)
```
### Residualkorrelationer
```{r}
RIresidcorr(df.psf, cutoff = 0.2)
```
### Targeting
```{r}
#| fig-height: 6
RItargeting(df.psf)
```
### Itemhierarki
```{r}
#| fig-height: 6
RIitemHierarchy(df.psf)
```
:::
::::


## DIF/invarians

### Kön

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psf, 12)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
#| fig-height: 3
#dif.gender<-recode(dif.gender,"'Pojke'=1;'Flicka'=2",as.factor=FALSE)
RIdifTable(df.psf, dif.gender)
```
#### Figur
```{r}
RIdifFigure(df.psf, dif.gender)
```
:::
::::

F89 har något hög DIF, i övrigt ser det bra ut. F99 ligger något högre än övriga också.

### Årskurs

```{r}
#| column: margin
#| echo: false

RIlistItemsMargin(df.psf, 12)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
#| fig-height: 3
RIdifTable(df.psf, dif.arskurs)
```
#### Figur
```{r}
RIdifFigure(df.psf, dif.arskurs)
```
:::
::::

Inga skillnader mellan årskurser.

### Årtal

```{r}
#| echo: false
#| column: margin
RIlistItemsMargin(df.psf, fontsize = 12)
```

:::: column-page-inset-left
::: panel-tabset
#### Tabell
```{r}
final.items.psf <- names(df.psf)
#write.csv(final.items, file = "2022-09-16 IFoptimalItems.csv")
df.dif.years <- df.dif.years %>% 
  select(any_of(final.items.psf))

df.dif.years$F89 <- recode(df.dif.years$F89, "2=1;3=2;4=2", as.factor = FALSE)
df.dif.years$F91 <- recode(df.dif.years$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.dif.years$F92 <- recode(df.dif.years$F92, "4=3", as.factor = FALSE)
df.dif.years$F93 <- recode(df.dif.years$F93, "4=3", as.factor = FALSE)
#df.dif.years$F94 <- recode(df.dif.years$F94, "2=1;3=2;4=2", as.factor = FALSE)
df.dif.years$F95 <- recode(df.dif.years$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)
df.dif.years$F97 <- recode(df.dif.years$F97, "4=3;3=2;2=1;1=0", as.factor = FALSE)
df.dif.years$F98 <- recode(df.dif.years$F98, "4=3", as.factor = FALSE)
df.dif.years$F99 <- recode(df.dif.years$F99, "4=3", as.factor = FALSE)
```

```{r}
RIdifTable(df.dif.years, dif.year)
```
#### Figur items
```{r}
RIdifFigure(df.dif.years, dif.year)
```
#### Över tid
```{r}
RIdifFigTime(df.dif.years, dif.year)
```
:::
::::

Items fungerar stabilt över tid.

### Interaktion årskurs och kön

```{r}
#| column: margin
#| echo: false

RIlistItemsMargin(df.psf, 12)
```

```{r}
RIdifTable2(df.psf, dif.gender, dif.arskurs)
```
Även här ligger F89 högt, vilket primärt beror på könsskillnaden som tidigare påvisades. Samtidigt är det sannolikt att det har mindre inverkan på beräkningen av indexvärden, när övriga items fungerar stabilt.


### Item fit över tid

DIF-analyserna visar på stabilitet i item locations över tid. Det kan också vara av intresse att se hur item fit ser ut över tid (2006-2020).

```{r}
final.items <- names(df.psf)

# final.items <- read_csv("PSFitemnr.csv") %>% 
#   pull(itemnr)

df.fit <- df.all %>%
  select(all_of(c(final.items,"ar"))) %>% 
  na.omit()

df.fit$F89 <- recode(df.fit$F89, "2=1;3=2;4=2", as.factor = FALSE)
df.fit$F91 <- recode(df.fit$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.fit$F92 <- recode(df.fit$F92, "4=3", as.factor = FALSE)
df.fit$F93 <- recode(df.fit$F93, "4=3", as.factor = FALSE)
#df.fit$F94 <- recode(df.fit$F94, "2=1;3=2;4=2", as.factor = FALSE)
df.fit$F98 <- recode(df.fit$F98, "4=3", as.factor = FALSE)
df.fit$F99 <- recode(df.fit$F99, "4=3", as.factor = FALSE)
df.fit$F95 <- recode(df.fit$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)
df.fit$F97 <- recode(df.fit$F97, "4=3;3=2;2=1;1=0", as.factor = FALSE)

```

```{r}
library(furrr)
plan(multisession, workers = 8)

itemfit.time <- df.fit %>% 
  split(.$ar) %>% 
  future_map(~ RIitemfitPCM(subset(., select = -ar), table = FALSE), 
             .options = furrr_options(seed = TRUE))

årtal <- c("2006", "2008", "2010", "2012", "2014", "2016", "2018", "2020")
itemfit.all <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(itemfit.all) <- c("Item", "År", 'InfitMSQ','OutfitMSQ')

for (i in årtal) {
  itemfit.add <- itemfit.time[[i]] %>% 
    rownames_to_column("Item") %>% 
    add_column(År = i)
  
  itemfit.all <- rbind(itemfit.all, itemfit.add)
}
```


```{r}
itemfit.all %>%
  group_by(Item) %>%
  summarise(
    mean_Out = mean(OutfitMSQ),
    sd_Out = sd(OutfitMSQ),
    max_Out = max(OutfitMSQ),
    min_Out = min(OutfitMSQ),
    mean_In = mean(InfitMSQ),
    sd_In = sd(InfitMSQ),
    max_In = max(InfitMSQ),
    min_In = min(InfitMSQ)
  ) %>%
  mutate(
    diffmax_OutfitMSQ = max_Out - min_Out,
    diffmax_InfitMSQ = max_In - min_In,
    item = Item
  ) %>%
  mutate(across(where(is.numeric), ~ round(.x, 2))) %>%
  mutate(across(starts_with(c("max", "min")), ~ cell_spec(.x, color = ifelse(.x < msq_min, "red",
    ifelse(.x > msq_max, "red", "black")
  )))) %>%
  kbl(booktabs = T, escape = F,
      col.names = c("Item","Mean","SD","Max","Min","Mean","SD","Max","Min","OutfitMSQ","InfitMSQ","Item")) %>%
  # bootstrap options are for HTML output
  kable_styling(
    bootstrap_options = c("striped", "hover"),
    position = "left",
    full_width = F,
    font_size = 15,
    fixed_thead = T
  ) %>%
  column_spec(c(1, 12), bold = T) %>%
  kable_classic(html_font = "Lato") %>%
  # latex_options are for PDF output
  kable_styling(latex_options = c("striped", "scale_down")) %>%
  add_header_above(c(" " = 1, 
                     "OutfitMSQ" = 4, 
                     "InfitMSQ" = 4, 
                     "Max differences" = 2,
                     " " = 1))

```

Inget item går utanför gränsvärden 0.7-1.3.

## Reliabilitet - psykiska/psykosomatiska besvär

```{r}
RItif(df.psf)
```
Klart bättre reliabilitet än vad någon av delskalorna uppnår separat.

## Person fit

```{r}
RIpfit(df.psf)
```

## Item-parametrar
```{r}
#| column: margin
#| echo: false

RIlistItemsMargin(df.psf, 12)
```

```{r}
RIitemparams(df.dif.years)
itemlabels %>% 
  filter(itemnr %in% names(df.dif.years)) %>% 
  write_csv("PSFitemnr.csv")
```
```{r}
RIscoreSE(df.dif.years)
```


## Exempel med single-item vs index

Data från enbart 2020.

OBS! Viktigt att komma ihåg att höga värden = hög risk, vilket även gäller svar på enskilda frågor. En positiv fråga som F99 har alltså omvända svarskategorier (3 och 4 sammanslagna):

- 3-4 - Sällan / Någon enstaka gång
- 2 - Ibland
- 1 - Ganska ofta
- 0 - Väldigt ofta

```{r}
#| label: itemind1

#---- create df with only 2020 respondents as example----
df.if <- df %>% 
  filter(ar == 2020) %>% 
  select(any_of(names(df.psf)),Kön) %>% 
  na.omit()

F99o <- df.if$F99

df.if$F89 <- recode(df.if$F89, "2=1;3=2;4=2", as.factor = FALSE)
df.if$F91 <- recode(df.if$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.if$F92 <- recode(df.if$F92, "4=3", as.factor = FALSE)
df.if$F93 <- recode(df.if$F93, "4=3", as.factor = FALSE)
df.if$F95 <- recode(df.if$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)
df.if$F97 <- recode(df.if$F97, "4=3;3=2;2=1;1=0", as.factor = FALSE)
df.if$F98 <- recode(df.if$F98, "4=3", as.factor = FALSE)
df.if$F99 <- recode(df.if$F99, "4=3", as.factor = FALSE)
df.if.gender <- df.if$Kön
df.if$Kön <- NULL
#---- estimate person locations----
library(catR)

# create matrix with item parameters
df.erm <- PCM(df.psf)
item.estimates <- eRm::thresholds(df.erm)
item_difficulty <- as.data.frame(item.estimates[["threshtable"]][["1"]])
item_difficulty$Location <- NULL
items <- item_difficulty %>% 
  mutate_if(is.character, as.numeric) %>% 
  as.matrix()

# loop through all participants to calculate theta for each one
thetaEstScores <- c()
#p1 <- c()
for (i in 1:nrow(df.if)){
  p1 <- as.numeric(as.vector(df.if[i,]))
  ptheta <- thetaEst(items, p1, model = "PCM", method = "WL") # several method options available for theta calculation
  thetaEstScores <- c(thetaEstScores,ptheta)
}

# # loop through all participants theta scores to calculate SE for each one
# thetaEstSE <- c()
# for (i in 1:length(thetaEstScores)) {
#   p1theta <- thetaEstScores[i]
#   p1 <- as.numeric(as.vector(df.if[i,]))
#   pthetaSE <- semTheta(thEst = p1theta, it = items, x = p1, model = "PCM", method = "ML") # several method options available for theta calculation
#   thetaEstSE <- c(thetaEstSE,pthetaSE)
# }

df.if$SumScores <- thetaEstScores
df.if$Kön <- df.if.gender
df.if$F99o <- F99o
#write_parquet(df.if, sink = "PSF2020.parquet")

#---- barplot for single item----
barplot(table(df.if$F99), col = "#8dc8c7", main = "Svarsfördelning för item F99")
```


```{r}
#---- visualize single item vs index score----
# some code from https://dallasnova.rbind.io/post/efficient-data-visualization-with-faded-raincloud-plots-delete-boxplot/
library(ggdist) # for shadeable density slabs
library(gghalves) # for half-half geoms
library(ggpp) # for position_dodge2nudge
library(colorspace) # for lightening color palettes
library(extrafont) # for Lato, RISE font
library(stringr)
# Setting colorblind-friendly palette
cbPalette <-c("#999999","#E69F00", "#56B4E9","#009E73",
              "#F0E442", "#0072B2", "#D55E00","#CC79A7")

cbPalette <- lighten(cbPalette, amount = 0.6, space = "HLS")

#---- plot for index value distributions divided by gender----

ggplot(df.if, aes(x = Kön, y = SumScores)) +
  stat_slab(side = "right", show.legend = F,
            scale = 0.6, # defines the height that a slab can reach
            position = position_dodge(width=.6), # distance between elements for dodging
            aes(fill_ramp = stat(level), fill=Kön), 
            .width = c(.50,.95,1)) +  # set shading
  stat_summary(fun.data = "mean_cl_normal",show.legend = F, size = .4,
               position = position_dodge2nudge(x=.05,width = .8)) +
# styling
  scale_fill_ramp_discrete(from='black', aesthetics = "fill_ramp")+ # set ramping color
  guides( # change name and display of legend elements
          color="none") + # suppresses color legend item) 
  scale_colour_manual(values = cbPalette, aesthetics = c("colour","fill"))+
  theme(plot.caption = element_text(face = "italic")) +
  #xlab(str_wrap("Svarskategorier för item F99", width = 40)) +
  ylab("Indexvärde") +
  ggtitle("Svarsfördelning för psykisk och psykosomatisk hälsa") +
  #labs(caption = "Punkterna visar medelvärden för indexvärde, fälten motsvarar 50% och 95% av distributionen.",
  #     subtitle = "Item F99 - Hur ofta tycker du att det är riktigt härligt att leva?") +
  coord_flip()
```


```{r}
#---- plots for index value vs single item response ----
ggplot(df.if, aes(x = as.factor(F99), y = SumScores)) +
  #geom_violin()
  # density distribution slab
  #geom_boxplot(size = 0.2) +
  stat_slab(side = "right", show.legend = F,
            scale = 0.6, # defines the height that a slab can reach
            position = position_dodge(width=.6), # distance between elements for dodging
            aes(fill_ramp = stat(level), fill=as.factor(F99)), 
            .width = c(.50,.95,1)) +  # set shading
  stat_summary(fun.data = "mean_cl_normal", show.legend = F, size = .4,
               position = position_dodge2nudge(x=.05,width = .8)) +
# styling
  scale_fill_ramp_discrete(from='black', aesthetics = "fill_ramp")+ # set ramping color
  guides( # change name and display of legend elements
          color="none") + # suppresses color legend item) 
  scale_colour_manual(values = cbPalette, aesthetics = c("colour","fill"))+
  theme(plot.caption = element_text(face = "italic")) +
  xlab(str_wrap("Svarskategorier för item F99", width = 40)) +
  ylab("Indexvärde") +
  ggtitle("Jämförelse av ett item och indexvärde") +
  labs(caption = "Punkterna visar medelvärden för indexvärde, fälten motsvarar 50% och 95% av distributionen.",
       subtitle = "Item F99 - Hur ofta tycker du att det är riktigt härligt att leva?") +
  coord_flip()
```


```{r}
ggplot(df.if, aes(x = as.factor(F99), y = SumScores)) +
  #geom_violin()
  # density distribution slab
  #geom_boxplot(size = 0.2) +
  stat_slab(side = "right", show.legend = T,
            scale = 0.6, # defines the height that a slab can reach
            position = position_dodge(width=.6), # distance between elements for dodging
            aes(fill_ramp = stat(level), fill=Kön), 
            .width = c(.50,.95,1)) +  # set shading
  stat_summary(fun.data = "mean_cl_normal",show.legend = F, size = .4,
               position = position_dodge2nudge(x=.05,width = .8)) +
# styling
  scale_fill_ramp_discrete(from='black', aesthetics = "fill_ramp")+ # set ramping color
  guides( # change name and display of legend elements
          color="none") + # suppresses color legend item) 
  scale_colour_manual(values = cbPalette, aesthetics = c("colour","fill"))+
  theme(plot.caption = element_text(face = "italic")) +
  xlab(str_wrap("Svarskategorier för item F99", width = 40)) +
  ylab("Indexvärde") +
  ggtitle("Jämförelse av ett item och indexvärde") +
  labs(caption = "Punkterna visar medelvärden för indexvärde, fälten motsvarar 50% och 95% av distributionen.",
       subtitle = "Item F99 - Hur ofta tycker du att det är riktigt härligt att leva?") +
  coord_flip()


# stat_dotsinterval(scale = 0.5, quantiles = 100, position = "dodge") +

```
### Distribution med ej omkodade svarskategorier

```{r}
#| label: testing

barplot(table(df.if$F99o), col = "#8dc8c7", main = "Svarsfördelning för item F99 innan recode")

#plotICC(df.ermo, item.subset = "F99")

ggplot(df.if, aes(x = as.factor(F99o), y = SumScores)) +
  #geom_violin()
  # density distribution slab
  #geom_boxplot(size = 0.2) +
  stat_slab(side = "right", show.legend = F,
            scale = 0.6, # defines the height that a slab can reach
            position = position_dodge(width=.6), # distance between elements for dodging
            aes(fill_ramp = stat(level), fill=as.factor(F99o)), 
            .width = c(.50,.95,1)) +  # set shading
  stat_summary(fun.data = "mean_cl_normal", show.legend = F, size = .4,
               position = position_dodge2nudge(x=.05,width = .8)) +
# styling
  scale_fill_ramp_discrete(from='black', aesthetics = "fill_ramp")+ # set ramping color
  guides( # change name and display of legend elements
          color="none") + # suppresses color legend item) 
  scale_colour_manual(values = cbPalette, aesthetics = c("colour","fill"))+
  theme(plot.caption = element_text(face = "italic")) +
  xlab(str_wrap("Svarskategorier för item F99", width = 40)) +
  ylab("Indexvärde") +
  ggtitle("Jämförelse av ett item och indexvärde") +
  labs(caption = "Punkterna visar medelvärden för indexvärde, fälten motsvarar 50% och 95% av distributionen.",
       subtitle = "Item F99o - Hur ofta tycker du att det är riktigt härligt att leva?") +
  coord_flip()
```

:::: column-page

## Jämförelser befintligt och nytt index

Rapporter utifrån Stockholmsenkäten har hittills räknat samman ett index för "Psykisk hälsa", baserat på enkätsvar för de fem items som i denna analys återfinns under rubriken "Psykosomatiska besvär"

```{r}
items.psm <- c("F88","F91","F93","F95","F98")

df.index <- df.all %>%
  select(items.psm, Kön, ARSKURS, ar, SkolSDO)

RIlistitems(df.index)
```

Indexberäkningen som använts utgår från att svaren översätts till siffror och sedan beräknas ett medelvärde av alla items. Lägsta svarsalternativet ("Aldrig") ersätts med siffran 100, näst lägsta med 75, och så vidare. Det innebär att ett högt värde motsvarar låg förekomst av besvär.

I [Stockholm Stads rapport för år 2022](https://start.stockholm/globalassets/aktuellt/nyheter/psykisk-halsa-grundskolans-arskurs-9-2022.pdf) återges resultatet på detta vis:

![](Index0-100.png)

Vi kan återskapa figuren utifrån data från 2020 för årskurs 9.

```{r}
#| fig-width: 12
#| fig-height: 6
df.indexR <- df.index %>%
  mutate(across(items.psm, ~ recode(.x, "0=100;1=75;2=50;3=25;4=0"))) %>%
  na.omit() %>%
  mutate(PSFindex = rowMeans(across(items.psm)))

library(ggchicklet)
# create a wide palette based on RISE colors
RISEpalette1 <- colorRampPalette(colors = c("#009ca6", "#e83c63", "#ffe500"))(6)
# "#009CA6" "#5C758B" "#B94F70" "#EC5D4F" "#F5A127" "#FFE500"
RISEpalette2 <- colorRampPalette(colors = c("#009ca6", "#e83c63", "#ffe500"))(8)

df.indexR %>%
  filter(ar == 2020) %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>% 
  group_by(SkolSDO, Kön) %>%
  summarise(PSFmean = round(mean(PSFindex, na.rm = T), 0)) %>%
  ggplot(aes(y = PSFmean, x = SkolSDO, fill = Kön, color = Kön)) +
  geom_chicklet(
    radius = grid::unit(1.5, "mm"),
    position = "dodge"
  ) +
  geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), linetype = 2, color = "darkgrey") +
  geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), linetype = 3, color = "black") +
  geom_text(aes(label = PSFmean, y = PSFmean + 2),
    position = position_dodge(width = .9),
    color = "black", size = 3.8
  ) +

  # annotate("text", label = "Medelvärde", y = 57, x = 3, color = "darkgrey") +
  scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
  scale_x_discrete("Stadsdel", guide = guide_axis(n.dodge = 3)) +
  scale_y_continuous(limits = c(0,100)) +
  theme_minimal(base_size = 12) +
  theme_rise(axissize = 14, titlesize = 16) +
  theme(text = element_text(family = "Lato")) +
  ylab("Medelvärde") +
  labs(
    title = "Psykisk hälsa indexvärde",
    subtitle = "Befintligt index, 2020, åk 9",
    caption = "Streckade linjer betecknar medelvärde för samtliga stadsdelar"
  )
  
```

### Nytt index (5 items)

Här utgår vi från samma fem items som i det befintliga indexet, men kodar om svarskategorierna som inte fungerade korrekt, och estimerar fram ett indexvärde för varje individ utifrån Rasch-parametrarna. För jämförbarhet skalas sedan mätvärdet om till att matcha omfånget 0-100. OBS att alla värden mellan 0 och 100 inte är möjliga mätvärden.

Frågorna mäter i huvudsak besvär, vilket medfört att indexet uppkallats efter det. För jämförbarhet med det befintliga indexet "psykisk hälsa", har mätvärden reverserats, så högre värden = lägre nivåer av besvär. Samma gäller det nya indexet med 9 items.

```{r}

# read item parameters from previous analysis
itemParams.psm <- read_csv("PsyksomItemParams.csv") %>% 
  as.matrix()

# create id variable to re-join thetas
df.index <- df.index %>% 
  mutate(id = seq.int(nrow(.)))

# recode items to correct response categories
df.indexNew <- df.index %>% 
  select(all_of(c(items.psm,"id"))) %>% 
  na.omit()

df.indexNew$F91 <- recode(df.indexNew$F91, "2=1;3=2;4=2", as.factor = FALSE)
df.indexNew$F93 <- recode(df.indexNew$F93, "4=3", as.factor = FALSE)
df.indexNew$F98 <- recode(df.indexNew$F98, "4=3", as.factor = FALSE)
df.indexNew$F95 <- recode(df.indexNew$F95, "4=3;3=2;2=1;1=0", as.factor = FALSE)

#RItileplot(df.indexNew %>% select(!id))
#itemParams.psm
df.indexNew$PSMscore <- df.indexNew %>% 
  select(!id) %>% 
  RIestThetas2(cpu = 8, itemParams = itemParams.psm)
df.index <- df.indexNew %>% 
  select(id,PSMscore) %>% 
  left_join(df.index,df.indexNew, by = "id")

# reverse score to match old index
df.index$PSMscore <- df.index$PSMscore*-1
```

```{r}
# rescale to match 0-100 range
df.index$PSMscore100 <- round(scales::rescale(df.index$PSMscore, to = c(0,100)),0)

```

### Nytt index (9 items)

Det index som både representerar psykosomatiska och psykiska besvär innehåller 9 (5+4) frågor, och mätvärden beräknas på samma vis utifrån items efter korrigering av svarskategorier.

```{r}
newIndex <- read_csv("PSFitemnr.csv")

items.psnew <- newIndex$itemnr

df.index9 <- df.all %>%
  select(items.psnew, Kön, ARSKURS, ar, SkolSDO)

RIlistitems(df.index9)
```

```{r}
# read item parameters from previous analysis
itemParams.psnew <- read_csv("itemParameters.csv") %>% 
  as.matrix()

# create id variable to re-join thetas
df.index9 <- df.index9 %>% 
  mutate(id = seq.int(nrow(.)))

# recode items to correct response categories
df.indexNew9 <- df.index9 %>% 
  select(all_of(c(items.psnew,"id"))) %>% 
  na.omit()

rcat1 <- c("F91", "F89")
rcat2 <- c("F95", "F97")
rcat3 <- c("F92", "F93", "F98", "F99")

for (i in rcat1) {
  df.indexNew9[[i]] <- recode(df.indexNew9[[i]], "2=1;3=2;4=2", as.factor = FALSE)
}
for (i in rcat2) {
  df.indexNew9[[i]] <- recode(df.indexNew9[[i]], "1=0;2=1;3=2;4=3", as.factor = FALSE)
}
for (i in rcat3) {
  df.indexNew9[[i]] <- recode(df.indexNew9[[i]], "4=3", as.factor = FALSE)
}

#RItileplot(df.indexNew %>% select(!id))
#itemParams.psm
df.indexNew9$PS9score <- df.indexNew9 %>% 
  select(!id) %>% 
  RIestThetas2(cpu = 8, itemParams = itemParams.psnew)
df.index9 <- df.indexNew9 %>% 
  select(id,PS9score) %>% 
  left_join(df.index9,df.indexNew9, by = "id")

# reverse score to match old index
df.index9$PS9score <- df.index9$PS9score*-1
# and rescaled version
df.index9$PS9score100 <- round(scales::rescale(df.index9$PS9score, to = c(0,100)),0)

```

```{r}
#| fig-width: 12
#| fig-height: 6
df.index %>% 
  filter(ar == 2020) %>% 
  filter(Kön %in% c("Pojke","Flicka")) %>% 
  filter(ARSKURS == "Åk 9") %>% 
  filter(!is.na(SkolSDO)) %>% 
  group_by(SkolSDO,Kön) %>% 
  summarise(PSFmean = round(mean(PSMscore100, na.rm = T),0)) %>% 
  ggplot(aes(y = PSFmean, x = SkolSDO, fill = Kön, color = Kön)) +
  geom_chicklet(
    radius = grid::unit(1.5, "mm"),
    position = "dodge"
  ) +
  geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), linetype = 2, color = "darkgrey") +
  geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), linetype = 3, color = "black") +
  geom_text(aes(label = PSFmean, y = PSFmean + 2),
    position = position_dodge(width = .9),
    color = "black", size = 3.8
  ) +

  # annotate("text", label = "Medelvärde", y = 57, x = 3, color = "darkgrey") +
  scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
  scale_x_discrete("Stadsdel", guide = guide_axis(n.dodge = 3)) +
  scale_y_continuous(limits = c(0,100)) +
  theme_minimal(base_size = 12) +
  theme_rise(axissize = 14, titlesize = 16) +
  theme(text = element_text(family = "Lato")) +
  ylab("Medelvärde") +
  labs(title = "Psykosomatiska besvär indexvärde",
       subtitle = "5 items, år 2020, åk 9",
       caption = "Streckade linjer betecknar medelvärde per kön för samtliga stadsdelar")
```

```{r}
#| fig-width: 12
#| fig-height: 6
df.index9 %>% 
  filter(ar == 2020) %>% 
  filter(Kön %in% c("Pojke","Flicka")) %>% 
  filter(ARSKURS == "Åk 9") %>% 
  filter(!is.na(SkolSDO)) %>% 
  group_by(SkolSDO,Kön) %>% 
  summarise(PSFmean = round(mean(PS9score100, na.rm = T),0)) %>% 
  ggplot(aes(y = PSFmean, x = SkolSDO, fill = Kön, color = Kön)) +
  geom_chicklet(
    radius = grid::unit(1.5, "mm"),
    position = "dodge"
  ) +
  geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), linetype = 2, color = "darkgrey") +
  geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), linetype = 3, color = "black") +
  geom_text(aes(label = PSFmean, y = PSFmean + 2),
    position = position_dodge(width = .9),
    color = "black", size = 3.8
  ) +

  # annotate("text", label = "Medelvärde", y = 57, x = 3, color = "darkgrey") +
  scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
  scale_x_discrete("Stadsdel", guide = guide_axis(n.dodge = 3)) +
  scale_y_continuous(limits = c(0,100)) +
  theme_minimal(base_size = 12) +
  theme_rise(axissize = 14, titlesize = 16) +
  theme(text = element_text(family = "Lato")) +
  ylab("Medelvärde") +
  labs(title = "Psykiska/psykosomatiska besvär indexvärde",
       subtitle = "9 items, år 2020, åk 9",
       caption = "Streckade linjer betecknar medelvärde per kön för samtliga stadsdelar")
```

### Indexvärde över tid, åk 9

```{r}
#| fig-width: 12
#| fig-height: 10

årtal <- c(2006,2008,2010,2012,2014,2016,2018,2020,2022)
# library(ggiraph)
# psfTid <- df.indexR %>%
#   filter(Kön %in% c("Pojke", "Flicka")) %>%
#   filter(!is.na(SkolSDO)) %>%
#   group_by(ar, SkolSDO, Kön) %>%
#   summarise(PSFmean = round(mean(PSFindex, na.rm = T), 0),
#             stdev = round(sd(PSFindex, na.rm = T))) %>%
#   ggplot(aes(y = PSFmean, x = ar, color = Kön, group = Kön)) +
#   geom_line(linewidth = 1) +
#   geom_point_interactive(aes(tooltip = PSFmean),
#                          size = 1.5) +
#   geom_ribbon(aes(ymin = PSFmean-stdev, ymax = PSFmean+stdev, fill = Kön), 
#               alpha = 0.15, linetype = 0) +
#   geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), 
#              linetype = 2, color = "black", alpha = 0.8) +
#   geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), 
#              linetype = 3, color = "black", alpha = 0.8) +
#   scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
#   scale_x_continuous("År",guide = guide_axis(n.dodge = 2), breaks = årtal) +
#   scale_y_continuous("Medelvärde", limits = c(0,100)) +
#   labs(title = "Psykisk ohälsa indexvärde",
#        caption = "Skuggade fält indikerar en standardavvikelse") +
#   facet_wrap(~SkolSDO) +
#   theme_minimal(base_size = 11) +
#   theme_rise()
# 
# ggiraph(ggobj = psfTid)

df.indexR %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>% 
  group_by(ar, SkolSDO, Kön) %>%
  summarise(PSFmean = round(mean(PSFindex, na.rm = T), 0),
            stdev = round(sd(PSFindex, na.rm = T))) %>%
  ggplot(aes(y = PSFmean, x = ar, color = Kön, group = Kön)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2.5) +
  geom_ribbon(aes(ymin = PSFmean-stdev, ymax = PSFmean+stdev, fill = Kön), 
              alpha = 0.15, linetype = 0) +
  geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), 
             linetype = 2, color = "black", alpha = 0.8) +
  geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), 
             linetype = 3, color = "black", alpha = 0.8) +
  scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
  scale_x_continuous("År",guide = guide_axis(n.dodge = 2), breaks = årtal) +
  scale_y_continuous("Medelvärde", limits = c(0,100)) +
  labs(title = "Psykisk hälsa indexvärde",
        subtitle = "5 items, befintligt index",
       caption = "Skuggade fält indikerar en standardavvikelse") +
  facet_wrap(~SkolSDO) +
  theme_minimal(base_size = 11) +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

```

```{r}
#| fig-width: 12
#| fig-height: 10
# psfTidscore <- df.index %>%
#   filter(Kön %in% c("Pojke", "Flicka")) %>%
#   filter(!is.na(SkolSDO)) %>%
#   group_by(ar, SkolSDO, Kön) %>%
#   summarise(PSFmean = round(mean(PSMscore100, na.rm = T), 0),
#             stdev = round(sd(PSMscore100, na.rm = T))) %>%
#   ggplot(aes(y = PSFmean, x = ar, color = Kön, group = Kön)) +
#   geom_line(linewidth = 1) +
#   geom_point_interactive(aes(tooltip = PSFmean),
#                          size = 1.5) +
#   geom_ribbon(aes(ymin = PSFmean-stdev, ymax = PSFmean+stdev, fill = Kön), 
#               alpha = 0.15, linetype = 0) +
#   geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), 
#              linetype = 2, color = "black", alpha = 0.8) +
#   geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), 
#              linetype = 3, color = "black", alpha = 0.8) +
#   scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
#   scale_x_continuous("År",guide = guide_axis(n.dodge = 2), breaks = årtal) +
#   scale_y_continuous("Medelvärde", limits = c(0,100)) +
#   labs(title = "Psykosomatiska besvär indexvärde",
#        caption = "Skuggade fält indikerar en standardavvikelse") +
#   facet_wrap(~SkolSDO) +
#   theme_minimal(base_size = 11) +
#   theme_rise()
# 
# ggiraph(ggobj = psfTidscore)

df.index %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>% 
  group_by(ar, SkolSDO, Kön) %>%
  summarise(PSFmean = round(mean(PSMscore100, na.rm = T), 0),
            stdev = round(sd(PSMscore100, na.rm = T))) %>%
  ggplot(aes(y = PSFmean, x = ar, color = Kön, group = Kön)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2.5) +
  geom_ribbon(aes(ymin = PSFmean-stdev, ymax = PSFmean+stdev, fill = Kön), 
              alpha = 0.15, linetype = 0) +
  geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), 
             linetype = 2, color = "black", alpha = 0.8) +
  geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), 
             linetype = 3, color = "black", alpha = 0.8) +
  scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
  scale_x_continuous("År",guide = guide_axis(n.dodge = 2), breaks = årtal) +
  scale_y_continuous("Medelvärde", limits = c(0,100)) +
  labs(title = "Psykosomatiska besvär indexvärde",
              subtitle = "5 items, nytt index",
       caption = "Skuggade fält indikerar en standardavvikelse") +
  facet_wrap(~SkolSDO) +
  theme_minimal(base_size = 11) +
  theme_rise() +
  theme(text = element_text(family = "Lato"))
```
```{r}
#| fig-width: 12
#| fig-height: 10

df.index9 %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>% 
  group_by(ar, SkolSDO, Kön) %>%
  summarise(PSFmean = round(mean(PS9score100, na.rm = T), 0),
            stdev = round(sd(PS9score100, na.rm = T))) %>%
  ggplot(aes(y = PSFmean, x = ar, color = Kön, group = Kön)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2.5) +
  geom_ribbon(aes(ymin = PSFmean-stdev, ymax = PSFmean+stdev, fill = Kön), 
              alpha = 0.15, linetype = 0) +
  geom_hline(data = . %>% filter(Kön == "Pojke"), aes(yintercept = mean(PSFmean)), 
             linetype = 2, color = "black", alpha = 0.8) +
  geom_hline(data = . %>% filter(Kön == "Flicka"), aes(yintercept = mean(PSFmean)), 
             linetype = 3, color = "black", alpha = 0.8) +
  scale_fill_manual("Kön", values = RISEpalette1[c(1, 5)], aesthetics = c("color", "fill")) +
  scale_x_continuous("År",guide = guide_axis(n.dodge = 2), breaks = årtal) +
  scale_y_continuous("Medelvärde", limits = c(0,100)) +
  labs(title = "Psykiska/psykosomatiska besvär indexvärde",
              subtitle = "9 items, nytt index",
       caption = "Skuggade fält indikerar en standardavvikelse") +
  facet_wrap(~SkolSDO) +
  theme_minimal(base_size = 11) +
  theme_rise() +
  theme(text = element_text(family = "Lato"))
```
::::

### Fördelningar

```{r}
df.indexR %>% 
  filter(ar == 2020) %>% 
  filter(ARSKURS == "Åk 9") %>% 
  select(PSFindex) %>% 
  summary()

df.indexR %>% 
  filter(ar == 2020) %>% 
  filter(ARSKURS == "Åk 9") %>% 
  select(PSFindex) %>% 
  pull() %>% 
  hist(., col = RISEprimGreen, main = "Psykisk ohälsa indexvärden")
summary(df.indexR$PSFindex)
```

```{r}
df.index %>% 
  filter(ar == 2020) %>% 
  filter(ARSKURS == "Åk 9") %>% 
  select(PSMscore100) %>% 
  summary()

df.index %>% 
  filter(ar == 2020) %>%  
  filter(ARSKURS == "Åk 9") %>% 
  select(PSMscore100) %>% 
  pull() %>% 
  hist(., col = RISEprimGreen, main = "Psykosomatiska besvär 5 item")
```

```{r}
df.index9 %>% 
  filter(ar == 2020) %>% 
  filter(ARSKURS == "Åk 9") %>% 
  select(PS9score100) %>% 
  summary()

df.index9 %>% 
  filter(ar == 2020) %>%
  filter(ARSKURS == "Åk 9") %>% 
  select(PS9score100) %>% 
  pull() %>% 
  hist(., col = RISEprimGreen, main = "Psykosomatiska besvär 9 item")
```

### Violin- & boxplot jämförelse

```{r}
library(PrettyCols)
df.indexR %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>%
  mutate(År = factor(ar)) %>% 
  ggplot(aes(x = År, y = PSFindex, group = År)) +
  geom_jitter(shape = 16, position = position_jitter(0.3), alpha = 0.05) +
  geom_violin(aes(fill = År), alpha= 0.85) +
  geom_boxplot(width = .3, outlier.shape = NA, alpha = 0.3, notch = TRUE) +
  xlab("År") +
  ylab("Indexvärde") +
  # scale_color_manual(
  #   values = RISEpalette1[c(1, 5)],
  #   aesthetics = c("fill", "color")
  # ) +
   scale_fill_pretty_d(name = "TealGreens") +
  labs(
    title = "Psykisk hälsa",
    subtitle = "Befintligt index",
    caption = "I boxen ryms 50% av respondenterna. Strecket indikerar medianvärdet"
  ) +
  theme_minimal() +
  theme_rise() +
  theme(
    text = element_text(family = "Lato")
  )
```

```{r}
df.index %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>%
  mutate(År = factor(ar)) %>% 
  ggplot(aes(x = År, y = PSMscore100, group = År)) +
  geom_jitter(shape = 16, position = position_jitter(0.3), alpha = 0.05) +
  geom_violin(aes(fill = År), alpha= 0.85) +
  geom_boxplot(width = .3, outlier.shape = NA, alpha = 0.3, notch = TRUE) +
  xlab("År") +
  ylab("Indexvärde") +
  # scale_color_manual(
  #   values = RISEpalette1[c(1, 5)],
  #   aesthetics = c("fill", "color")
  # ) +
   scale_fill_pretty_d(name = "TealGreens") +
  labs(
    title = "Psykosomatiska besvär",
    subtitle = "Nytt 5-item index",
    caption = "I boxen ryms 50% av respondenterna. Strecket indikerar medianvärdet"
  ) +
  theme_minimal() +
  theme_rise() +
  theme(
    text = element_text(family = "Lato")
  )
```
```{r}
df.index9 %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>%
  mutate(År = factor(ar)) %>% 
  ggplot(aes(x = År, y = PS9score100, group = År)) +
  geom_jitter(shape = 16, position = position_jitter(0.3), alpha = 0.05) +
  geom_violin(aes(fill = År), alpha= 0.85) +
  geom_boxplot(width = .3, outlier.shape = NA, alpha = 0.3, notch = TRUE) +
  xlab("År") +
  ylab("Indexvärde") +
  # scale_color_manual(
  #   values = RISEpalette1[c(1, 5)],
  #   aesthetics = c("fill", "color")
  # ) +
   scale_fill_pretty_d(name = "TealGreens") +
  labs(
    title = "Psykiska/psykosomatiska besvär",
    subtitle = "Nytt 9-item index",
    caption = "I boxen ryms 50% av respondenterna. Strecket indikerar medianvärdet"
  ) +
  theme_minimal() +
  theme_rise() +
  theme(
    text = element_text(family = "Lato")
  )
```

#### Fördelat på kön

```{r}
library(PrettyCols)
df.indexR %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>%
  mutate(År = factor(ar)) %>% 
  ggplot(aes(x = År, y = PSFindex, group = År)) +
  geom_jitter(shape = 16, position = position_jitter(0.3), alpha = 0.05) +
  geom_violin(aes(fill = År), alpha= 0.85) +
  geom_boxplot(width = .3, outlier.shape = NA, alpha = 0.3, notch = TRUE) +
  xlab("År") +
  ylab("Indexvärde") +
  # scale_color_manual(
  #   values = RISEpalette1[c(1, 5)],
  #   aesthetics = c("fill", "color")
  # ) +
   scale_fill_pretty_d(name = "Rainbow") +
  labs(
    title = "Psykisk hälsa",
    subtitle = "Befintligt index",
    caption = "I boxen ryms 50% av respondenterna. Strecket indikerar medianvärdet"
  ) +
  theme_minimal() +
  theme_rise() +
  theme(
    text = element_text(family = "Lato")
  ) + 
  facet_wrap(~Kön)
```

```{r}
df.index %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>%
  mutate(År = factor(ar)) %>% 
  ggplot(aes(x = År, y = PSMscore100, group = År)) +
  geom_jitter(shape = 16, position = position_jitter(0.3), alpha = 0.05) +
  geom_violin(aes(fill = År), alpha= 0.85) +
  geom_boxplot(width = .3, outlier.shape = NA, alpha = 0.3, notch = TRUE) +
  xlab("År") +
  ylab("Indexvärde") +
  # scale_color_manual(
  #   values = RISEpalette1[c(1, 5)],
  #   aesthetics = c("fill", "color")
  # ) +
   scale_fill_pretty_d(name = "Rainbow") +
  labs(
    title = "Psykosomatiska besvär",
    subtitle = "Nytt 5-item index",
    caption = "I boxen ryms 50% av respondenterna. Strecket indikerar medianvärdet"
  ) +
  theme_minimal() +
  theme_rise() +
  theme(
    text = element_text(family = "Lato")
  ) +
  facet_wrap(~Kön)
```
```{r}
df.index9 %>%
  filter(Kön %in% c("Pojke", "Flicka")) %>%
  filter(!is.na(SkolSDO)) %>%
  filter(ARSKURS == "Åk 9") %>%
  mutate(År = factor(ar)) %>% 
  ggplot(aes(x = År, y = PS9score100, group = År)) +
  geom_jitter(shape = 16, position = position_jitter(0.3), alpha = 0.05) +
  geom_violin(aes(fill = År), alpha= 0.85) +
  geom_boxplot(width = .3, outlier.shape = NA, alpha = 0.3, notch = TRUE) +
  xlab("År") +
  ylab("Indexvärde") +
  # scale_color_manual(
  #   values = RISEpalette1[c(1, 5)],
  #   aesthetics = c("fill", "color")
  # ) +
   scale_fill_pretty_d(name = "Rainbow") +
  labs(
    title = "Psykiska/psykosomatiska besvär",
    subtitle = "Nytt 9-item index",
    caption = "I boxen ryms 50% av respondenterna. Strecket indikerar medianvärdet"
  ) +
  theme_minimal() +
  theme_rise() +
  theme(
    text = element_text(family = "Lato")
  ) + 
  facet_wrap(~Kön)
```


### Tak-/golveffekter

```{r}
df.indexR %>% 
  group_by(PSFindex) %>% 
  reframe(n = n()) %>% 
  mutate(Procent = round(100*n/sum(n),1)) %>% 
  formattable(., table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 50%"')
```


```{r}
df.index %>% 
  group_by(PSMscore100) %>% 
  reframe(n = n()) %>% 
  mutate(Procent = round(100*n/sum(n),1)) %>% 
  formattable(., table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 50%"')
```


```{r}
df.index9 %>% 
  group_by(PS9score100) %>% 
  reframe(n = n()) %>% 
  mutate(Procent = round(100*n/sum(n),1)) %>% 
  formattable(., table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 50%"')
```


## Programvara som använts för analyserna

```{r}
#| label: packagesv
pkgs <- cite_packages(cite.tidyverse = TRUE, 
                      output = "table",
                      bib.file = "grateful-refs.bib",
                      include.RStudio = TRUE,
                      out.dir = getwd())
formattable(pkgs, 
            table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 80%"')
```

## Referenser













